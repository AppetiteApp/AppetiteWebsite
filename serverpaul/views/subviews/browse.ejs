<ul class="nav">
  <a align="center" href="#/home"><li>Home</li></a>
  <a align="center" href="#/aboutus"><li>About Us</li></a>
  <a align="center" href="#/home"><li><img height="35px" src="/imgs/chefhat.png"></li></a>
  <a align="center" href="#/browse"><li>Browse</li></a>
  <a align="center" href="#/account"><li>My Account</li></a>

</ul>



<div id="itemscontainer">
  <div id="innercontainer">
  <div ng-repeat="dish in dishes" id="repeateditem">
      <div id="listitem" ng-click="showDetails = !showDetails">

        <div id="dishbanner">
          <div class="dishthumbnail">
            <img class="img-thumbnail" src="/imgs/gordon.jpg" />
          </div>

            <div id="dishtitle">{{dish.dishName}}</div>
            <div id="dishprice">${{dish.price}}</div>
        </div>
    </div>
    <div ng-show="showDetails" id="itemdetails">
        <p>{{dish.description}}</p>
        <div id="dishtime">{{dish.time}}</div>
        <div id="dishphone">{{dish.phone}}</div>
        <div id="dishlocation">{{dish.location}}</div>
    </div>
  </div>
</div>
</div>

<div class="morph-button morph-button-modal1 morph-button-modal-2 morph-button-fixed" id="submitdishbutton">
    <button type="button" ng-click="dish.submitSuccess=false">Sell Dish!</button>
    <div class="morph-content">
        <div class="content-style-form content-style-form-1">
            <span class="icon icon-close">Close the dialog</span>
            <h2>Sell a Dish</h2>
            {{message}}
            <div class="warning" ng-repeat="warning in dish.warnings">{{warning.warningMessage}}</div>
            <div class="warning" ng-repeat="error in dish.errors">{{error.errorMessage}}</div>


          <!--PAUL'S FORM-->
          <!--<form>-->
          <!--  <div ng-switch="vm.step">-->
          <!--    <div class="stepone" ng-switch-when="one">-->
          <!--      <h3>Step 1</h3>-->
          <!--      <div class="form-group">-->
          <!--        <label>Dish</label>-->
          <!--        <input type="text" ng-model="dish.dishName" />-->
          <!--      </div>-->
          <!--      <div class="form-group">-->
          <!--        <label>Password</label>-->
          <!--        <input ng-model="dish.description" />-->
          <!--      </div>-->
          <!--      <button type="button" ng-click="stepTwo()">Step 2</button>-->
          <!--    </div>-->
          <!--    <div class="steptwo" ng-switch-when="two">-->
          <!--      <h3>Step 2</h3>-->
          <!--      <div class="form-group">-->
          <!--        <label>Price</label>-->
          <!--        <input ng-model="dish.price" />-->
          <!--      </div>-->
          <!--      <div class="form-group">-->
          <!--        <label>Start Hour</label>-->
          <!--        <input ng-model="dish.startHour" />-->
          <!--      </div>-->
          <!--      <div class="form-group">-->
          <!--        <label>End Hour</label>-->
          <!--        <input ng-model="dish.endHour" />-->
          <!--      </div>-->
          <!--      <button type="button" ng-click="stepThree()">Step 3</button>-->
          <!--    </div>  -->
          <!--    <div class="stepthree" ng-switch-when="three">-->
          <!--      <h3>Step 3</h3>-->
          <!--      <div class="form-group">-->
          <!--        <label for="exampleInputEmail1">Email address</label>-->
          <!--        <input type="email" class="form-control" id="exampleInputEmail1" placeholder="Email">-->
          <!--      </div>-->
          <!--      <div class="form-group">-->
          <!--        <label for="exampleInputPassword1">Password</label>-->
          <!--        <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">-->
          <!--      </div>-->
          <!--      <button type="button" class="btn btn-default">Submit</button>-->
          <!--    </div>  -->
          <!--  </div>-->
          <!--</form>-->

          <form ng-submit="submitDish(dish)">
                <div class="form-group">
                  <label>Dish</label>
                  <input type="text" ng-model="dish.dishName" />
                </div>
                <div class="form-group">
                  <label>Description</label>
                  <textarea ng-model="dish.description"></textarea>
                </div>
                <div class="form-group">
                  <label>Price</label>
                  <input ng-model="dish.price" />
                </div>
                <div class="form-group">
                  <p>{{dish.time.year}} / {{dish.time.month}} / {{dish.time.day}}</p> 
                  <p>Chose custom date: <input type="checkbox" ng-model="dish.time.custom" /></p>
                  <p ng-show="dish.time.custom"><input ng-model="dish.time.year"/><input ng-model="dish.time.month"><input ng-model="dish.time.day"></p>
                 
                  <p>From: <input ng-model="dish.time.startHour" /> To: <input ng-model="dish.time.endHour" />
                </div>
                <div class="form-group">
                  <p>Pickup Location:</p>
                  <p>{{dish.location.name}}</p>
                  <p>Use custom location: <input type="checkbox" ng-model="dish.locationCustom" /></p>
                  <div ng-show="dish.locationCustom">
                    <p>Search for your Address: <input type="text" ng-model="searchAddress" /><button ng-click="submitAddress()">Search</button></p>
                    
                    <div ng-repeat="result in results" class="choices" ng-click="assignLocation(result)">
                      <p>{{result.formatted_address}}</p>
                    
                    </div>
                  </div>
                </div>
                <div class="form-group">
                  <label for="phone">Phone:</label>
                  <input type="text" class="form-control" ng-model="dish.phone">
                </div>
                <button type="submit" class="btn btn-default">Submit</button>
              </div>  
            </div>
          </form>






      </div>
    </div>
</div><!-- morph-button -->





<div id="map">

</div>



<style>

    /*CHERYL'S STYLES*/
    .choices {
        border: 1px solid #333;
        background-color: #f0f0f0;
        margin: 5px 0;
    }
    .choices:hover {
        cursor: pointer;
    }
    
    
    

  button.accordion {
      background-color: #eee;
      color: #444;
      cursor: pointer;
      padding: 18px;
      width: 100%;
      border: none;
      text-align: left;
      outline: none;
      font-size: 15px;
      transition: 0.4s;
  }

  div.panel {
      display: none;
  }

  div.panel.show {
      display: block !important;
  }
</style>

<!--the original one-->
<!--<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDrhD4LOU25zT-2Vu8zSSuL8AnvMn2GEJ0&callback="-->
<!--async defer>-->
 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDrhD4LOU25zT-2Vu8zSSuL8AnvMn2GEJ0&callback=initMap"
async defer></script>


<script>
//Note to Paul:
    // not working because this only adds eventlisteners to elements already on page
    // but the dishes are actually added later
    // maybe put this into Angular
  var acc = document.getElementsByClassName("accordion");
  var i;

  for (i = 0; i < acc.length; i++) {
      acc[i].addEventListener('click', function() {
          this.classList.toggle("active");
          this.nextElementSibling.classList.toggle("show");
      }, false);

    //   acc[i].onclick = function(){
    //       this.classList.toggle("active");
    //       this.nextElementSibling.classList.toggle("show");
    // }
  }

    var map;

    function initMap() {
        var mapDiv = document.getElementById('map');
        map = new google.maps.Map(mapDiv, {
            center: {lat: 45.5116861, lng: -73.5773356},
            zoom: 15,
            streetViewControl: false,
            mapTypeControl: false
        });

        mapHelper(map);

     }


    var mapHelper = function(map){
        var dishes = [];
        var markers = [];
        firebase.database().ref('dish/').orderByChild("dataAdded").on("value", function(snapshot){
            var allDishes = snapshot.val();
            for (var key in allDishes){
                // if (!allDishes[key]["deleted"] && allDishes[key]["uid"] !== firebase.auth().currentUser.uid){
                //if (!allDishes[key]["deleted"]){
                    //console.log(allDishes[key]);
                    dishes.unshift({
                        dishName    : allDishes[key]["dishName"],
                        description : allDishes[key]["description"],
                        phone       : allDishes[key]["phone"],
                        price       : allDishes[key]["price"],
                        quantity    : allDishes[key]["quantity"],
                        time        : allDishes[key]["time"],
                        location    : allDishes[key]["location"],
                        owner       : allDishes[key]["owner"],
                        key         : key
                    });

                    var marker = new google.maps.Marker({
                        position: {
                            lat: allDishes[key]["lat"],
                            lng: allDishes[key]["lng"]
                        },
                        title: allDishes[key]["dishName"]
                    });

                    markers.push(marker);
                    //console.log(marker);

                //} //end if
            } // end forEach loop

            markers.forEach(function(pin){
                pin.setMap(map);
            });
        });
    }; //end mapHelper function

</script>

<script src="/js/classie.js"></script>
<script src="/js/uiMorphingButton_fixed.js"></script>
<script>
  (function() {
    var docElem = window.document.documentElement, didScroll, scrollPosition;

    // trick to prevent scrolling when opening/closing button
    function noScrollFn() {
      window.scrollTo( scrollPosition ? scrollPosition.x : 0, scrollPosition ? scrollPosition.y : 0 );
    }

    function noScroll() {
      window.removeEventListener( 'scroll', scrollHandler );
      window.addEventListener( 'scroll', noScrollFn );
    }

    function scrollFn() {
      window.addEventListener( 'scroll', scrollHandler );
    }

    function canScroll() {
      window.removeEventListener( 'scroll', noScrollFn );
      scrollFn();
    }

    function scrollHandler() {
      if( !didScroll ) {
        didScroll = true;
        setTimeout( function() { scrollPage(); }, 60 );
      }
    };

    function scrollPage() {
      scrollPosition = { x : window.pageXOffset || docElem.scrollLeft, y : window.pageYOffset || docElem.scrollTop };
      didScroll = false;
    };

    scrollFn();

    [].slice.call( document.querySelectorAll( '.morph-button' ) ).forEach( function( bttn ) {
      new UIMorphingButton( bttn, {
        closeEl : '.icon-close',
        onBeforeOpen : function() {
          // don't allow to scroll
          noScroll();
        },
        onAfterOpen : function() {
          // can scroll again
          canScroll();
        },
        onBeforeClose : function() {
          // don't allow to scroll
          noScroll();
        },
        onAfterClose : function() {
          // can scroll again
          canScroll();
        }
      } );
    } );

    // for demo purposes only
    [].slice.call( document.querySelectorAll( 'form button' ) ).forEach( function( bttn ) {
      bttn.addEventListener( 'click', function( ev ) {
          //ev.preventDefault();
          console.log("default prevented?");

      } );
    } );
  })();
</script>

