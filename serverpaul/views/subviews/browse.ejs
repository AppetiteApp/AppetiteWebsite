<div id="itemscontainer">
    <div id="submitsuccess" ng-cloak>{{message}}</div>
  <div id="innercontainer">
  <div ng-repeat="dish in dishes" id="repeateditem" ng-id="{{dish.key}}" ng-cloak>

        <div id="dishbanner" ng-class="{'expandcollapse-heading-collapsed': active, 'expandcollapse-heading-expanded': !active}" ng-click="active = !active" >
          <div class="dishthumbnail">
            <img class="img-thumbnail" ng-src="{{dish.ownerPic}}"/>
          </div>
            <div id="dishprice">${{dish.price}}</div>
            <div id="order">ORDER</div>
          <div id="itembox">
            <div id="dishtitle">{{dish.dishName}}</div>
            <div class="chefname">by {{dish.owner}}</div></br>
            <div id="dishtime">{{dish.time}}</div></br></br>
          </div>

        </div>
    <div class="slideDown" ng-hide="!active" id="itemdetails">
    <div class="dishdescription">"{{dish.description}}"</div>
        <div id="dishphone">{{dish.phone}}</br>
          {{dish.location}}</div>
    </div>
  </div>
</div>
</div>

<div id="map">

</div>



<style>

    /*CHERYL'S STYLES*/
    .choices {
        border: 1px solid #333;
        background-color: #f0f0f0;
        margin: 5px 0;
    }
    .choices:hover {
        cursor: pointer;
    }

    .faded {
        font-weight: lighter;
        font-size: 0.7em;
    }




  button.accordion {
      background-color: #eee;
      color: #444;
      cursor: pointer;
      padding: 18px;
      width: 100%;
      border: none;
      text-align: left;
      outline: none;
      font-size: 15px;
      transition: 0.4s;
  }

  div.panel {
      display: none;
  }

  div.panel.show {
      display: block !important;
  }

/*CHERYL MADE THESE STYLES, FEEL FREE TO REMOVE*/

  .infoDiv h2 {
      font-weight: normal;
  }

  .infoDiv h2,
  .infoDiv p{
      margin: 3px;
  }

  span.right {
      display: inline-block;
      float: right;
  }

</style>


 <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFeKB5L3QbetPlLDFhuftMqTUTuUhkKhM&callback=initMap"
async defer></script>


<script>
  var acc = document.getElementsByClassName("accordion");
  var i;

  for (i = 0; i < acc.length; i++) {
      acc[i].addEventListener('click', function() {
          this.classList.toggle("active");
          this.nextElementSibling.classList.toggle("show");
      }, false);
  }

  var map;

  function initMap() {
    var mapDiv = document.getElementById('map');

    map = new google.maps.Map(mapDiv, {
        center: new google.maps.LatLng(45.5116861, -73.5773356),
        zoom: 14,
        streetViewControl: false,
        mapTypeControl: false
    });

    mapHelper(map);
    google.maps.event.trigger(map, 'resize');
    //resizeMap(map);




    //google.maps.event.trigger(map, 'resize');
    map.setZoom( map.getZoom() );

    //map.setCenter({lat: 45.5116861, lng: -73.5773356});

  }


    var mapHelper = function(map){
        var dishes = [];
        var markers = [];
        var currentUser = firebase.auth().currentUser;
        firebase.database().ref('dish/').on("value", function(snapshot){

            snapshot.forEach(function(child) {
                //console.log(child.val());
                dishes.push(child.val());

                if (child.val().active){
                    //console.log("new marker pushed!", child.val().dishName);
                    //console.log("lat", child.val().lat, "; lng:", child.val().lng);
                    console.log(child.val().time.startTime);
                    var date = new Date(child.val().time.startTime);

                    var time = makeTime(date);
                    if (currentUser && child.val().ownerid === currentUser.uid){
                        child.val().owner = "me";
                    }

                    var infoContent = "<div class='infoDiv'><h2>" +
                                      child.val().dishName + "<span class='right'>$" + child.val().price.toString() + "</span></h2><h2><span class='faded'> by " +
                                      child.val().owner +
                                      "</span></h2><p>" +
                                      child.val().description +
                                      "</p><p>Available @ " +
                                      time +
                                      "</p></div>";

                    var infowindow = new google.maps.InfoWindow({
                        content: infoContent
                    });


                    var marker = new google.maps.Marker({
                        position: {
                            lat: child.val().lat,
                            lng: child.val().lng
                        },
                        title: child.val().dishName
                    });

                    //function for bouncing
                          function toggleBounce() {
        if (marker.getAnimation() !== null) {
          marker.setAnimation(null);
        } else {
          marker.setAnimation(google.maps.Animation.BOUNCE);
        }
      }

                    //simulate a click here, using 'selector' to select the element with ng-id
                    var selector = 'div[ng-id="' + child.key + '"]';
                    $('body').on('click', selector, function () {
                        google.maps.event.trigger(marker, 'click', {});
                    });

                    $('body').on('mouseover', selector, function(){
                        marker.setAnimation(google.maps.Animation.BOUNCE);
                    });

                    $('body').on('mouseout', selector, function(){
                        marker.setAnimation(null);
                    });

                    marker.addListener('click', function() {
                        infowindow.open(map, marker);
                    });



                    markers.push(marker);
                    //console.log(marker);

                } //end if

            });

            markers.forEach(function(pin){
                pin.setMap(map);
            });
        });
    }; //end mapHelper function

    var makeTime = function(date) {
        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jue", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

        var formatAPMP = function(date) {
            var hours = date.getHours();
            var minutes = date.getMinutes();
            var ampm = hours >= 12 ? 'pm' : 'am';
            hours = hours % 12;
            hours = hours ? hours : 12; // the hour '0' should be '12'
            minutes = minutes < 10 ? '0' + minutes : minutes;
            var strTime = hours + ':' + minutes + ampm;
            return strTime;
        };

        var formatDate = function(date){
            console.log("Got function to format date!");
            var todayDate = new Date();
            var testDate = new Date(date.toString());

            var timeString;
            if (testDate.setHours(0,0,0,0) == todayDate.setHours(0,0,0,0)){
                timeString = "today ";
            } else if(date.getFullYear() === todayDate.getFullYear()) {
                timeString = monthNames[date.getMonth()] + " " + date.getDate() + " ";
            } else {
                timeString = date.getFullYear() + ' ' + monthNames[date.getMonth()] + ' ' + date.getDate() + ' ';
            }
            console.log(timeString);
            return timeString;
        };

        return formatDate(date) + formatAPMP(date);

    };

</script>

<script src="/js/classie.js"></script>
<script src="/js/uiMorphingButton_fixed.js"></script>
<script>

  (function() {
    var docElem = window.document.documentElement, didScroll, scrollPosition;

    // trick to prevent scrolling when opening/closing button
    function noScrollFn() {
      window.scrollTo( scrollPosition ? scrollPosition.x : 0, scrollPosition ? scrollPosition.y : 0 );
    }

    function noScroll() {
      window.removeEventListener( 'scroll', scrollHandler );
      window.addEventListener( 'scroll', noScrollFn );
    }

    function scrollFn() {
      window.addEventListener( 'scroll', scrollHandler );
    }

    function canScroll() {
      window.removeEventListener( 'scroll', noScrollFn );
      scrollFn();
    }

    function scrollHandler() {
      if( !didScroll ) {
        didScroll = true;
        setTimeout( function() { scrollPage(); }, 60 );
      }
    };

    function scrollPage() {
      scrollPosition = { x : window.pageXOffset || docElem.scrollLeft, y : window.pageYOffset || docElem.scrollTop };
      didScroll = false;
    };

    scrollFn();

    [].slice.call( document.querySelectorAll( '.morph-button' ) ).forEach( function( bttn ) {
      new UIMorphingButton( bttn, {
        closeEl : '.icon-close',
        onBeforeOpen : function() {
          // don't allow to scroll
          noScroll();
        },
        onAfterOpen : function() {
          // can scroll again
          canScroll();
        },
        onBeforeClose : function() {
          // don't allow to scroll
          noScroll();
        },
        onAfterClose : function() {
          // can scroll again
          canScroll();
        }
      } );
    } );

    // for demo purposes only
    [].slice.call( document.querySelectorAll( 'form button' ) ).forEach( function( bttn ) {
      bttn.addEventListener( 'click', function( ev ) {
          //ev.preventDefault();
          console.log("default prevented?");

      } );
    } );
  })();
</script>
<script>
// Get the modal
var modal = document.getElementById('myModal');

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
    modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
    if (event.target == modal2) {
        modal2.style.display = "none";
    }
}



// Get the modal
var modal2 = document.getElementById('myModal2');

// Get the button that opens the modal
var btn2 = document.getElementById("myBtn2");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close2")[0];

// When the user clicks the button, open the modal
btn2.onclick = function() {
    modal2.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
    modal2.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
// window.onclick = function(event) {
//     if (event.target == modal2) {
//         modal2.style.display = "none";
//     }
// }

</script>
<script>
function growDiv() {
    var growDiv = document.getElementById('grow');
    if (growDiv.clientHeight) {
      growDiv.style.height = 0;
    } else {

      growDiv.style.height = growDiv.scrollHeight + "px";
    }
document.getElementById("more-button").value=document.getElementById("more-button").value=='Read more'?'Learn More':'Read more';
}

</script>
